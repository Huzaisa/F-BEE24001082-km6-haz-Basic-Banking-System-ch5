// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  nama         String
  email        String
  password     String
  BankAccounts BankAccount[]
  profile      Profile?

  @@map("User")
}

model Profile {
  id             Int    @id @default(autoincrement())
  identityType   String
  identityNumber String
  address        String
  User           User?  @relation(fields: [userId], references: [id])
  userId         Int    @unique

  @@map("Profile")
}

model BankAccount {
  id                 Int           @id @default(autoincrement())
  bankName           String
  bankAccountNumber  String
  balance            Float
  User               User?         @relation(fields: [userId], references: [id])
  userId             Int           @unique
  sourceAccount      Transaction[] @relation("sourceAccount")
  destinationAccount Transaction[] @relation("destinationAccount")

  @@map("BankAccount")
}

model Transaction {
  id                   Int   @id @default(autoincrement())
  sourceAccountId      Int
  destinationAccountId Int
  amount               Float

  sourceAccount      BankAccount @relation("sourceAccount", fields: [sourceAccountId], references: [id])
  destinationAccount BankAccount @relation("destinationAccount", fields: [destinationAccountId], references: [id])

  @@map("transactions")
}
